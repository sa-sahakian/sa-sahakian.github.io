---
layout: post
title:  "Blog 1-SP21"
date:   2021-02-26 18:33:31 -0700
categories: jekyll update
---


# Terraform (Part1)#
Note: this is a qucik guide line from "learn.hashicorp.com"

- What is Terraform?
Terraform is the infrastructure as code tool from HashiCorp. It is a tool for building, changing, and managing infrastructure in a safe, repeatable way.

- Infrastructure as a code!
It is the process of managing infrastructure in a file or files rather than manually configuring resources in a user interface. 
The resources can be any piece of infrustructures such as VMs, Security groups, network interfaces, etc...
At a high level, Terraform allows operators to use HCL to author files containing definitions of their desired resources on almost any provider (AWS, GCP, GitHub, Docker, etc) and automates the creation of those resources at the time of apply.

- Workflow
1. Scope
2. Authir
3. Initialize
4. Plan and Apply

- Advantages of Terraform:
1. Platform Agnostic
2. State Managment
3. Operator Confidence

- Platform Agnostic:
Terraform can manage a heterogenous environment with the same workflow by creating a configuration file to fit the needs of your project or organization.

- State Managment: 
Terraform creates a state file when a project is first initialized. Terraform uses this local state to create plans and make changes to your infrastructure. 

- Operator Confidence:
The workflow built into Terraform aims to instill confidence in users by promoting easily repeatable operations and a planning phase to allow users to ensure the actions taken by Terraform will not cause disruption in their environment. 
